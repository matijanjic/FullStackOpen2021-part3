{"version":3,"sources":["components/Filter.js","components/AddPerson.js","services/phonebookServices.js","components/Numbers.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["Filter","handleSearchChange","onChange","AddPerson","addPerson","newName","newNumber","handleNameChange","handleNumberChange","onSubmit","value","type","baseUrl","axios","get","then","response","data","newObject","request","post","console","log","id","put","delete","Numbers","persons","search","setPersons","filter","person","name","toLowerCase","includes","map","number","onClick","window","confirm","phonebookServices","Notification","message","className","App","useState","setNewName","setNewNumber","setSearch","notification","setNotification","errorMessage","setErrorMessage","useEffect","initPhonebook","Error","event","target","preventDefault","newPerson","some","idToUpdate","find","setTimeout","returnedPerson","catch","error","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31892536.chunk.js","sourcesContent":["import React from \"react\"\n\nconst Filter = ({handleSearchChange}) => {\n    return (\n      <>\n      filter shown with: <input onChange={handleSearchChange}/>\n      </>\n    )\n  }\n\nexport default Filter","import React from \"react\";\n\nconst AddPerson = ({addPerson, newName, newNumber, handleNameChange, handleNumberChange}) => {\n    return (\n      <form onSubmit={addPerson}>\n          <div>\n            name: <input value={newName} onChange={handleNameChange}/>\n          </div>\n          <div>\n            number: <input value={newNumber} onChange={handleNumberChange}/>\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n          \n        </form>\n    )\n  }\n\nexport default AddPerson","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    console.log('created ', newObject)\n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    console.log('updated ', newObject)\n    return request.then(response => response.data)\n}\n\nconst del = id => {\n    axios.delete(`${baseUrl}/${id}`)\n    console.log('deleted ', id)\n}\n\nexport default {getAll, create, update, del}","import React from \"react\"\nimport phonebookServices from \"../services/phonebookServices\"\n\nconst Numbers = ({persons, search, setPersons}) => {\n\n  const deletePerson = (id,name) => {\n    if(window.confirm(`Are you sure you want to delete ${name}?`)) {\n    phonebookServices\n      .del(id)\n      setPersons(persons.filter(person => person.id !== id))\n    }\n\n  }\n    return (\n      <div>{persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n        .map(person => \n        <li key={person.name}>{person.name} {person.number}\n        <button onClick={() => deletePerson(person.id,person.name)}>delete</button>\n        </li>\n        \n        )}</div>\n    )\n  }\n\nexport default Numbers","import './notification.css'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import './error.css'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport AddPerson from './components/AddPerson'\nimport Numbers from './components/Numbers'\nimport phonebookServices from './services/phonebookServices'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\n//npm install json-server --save-dev\n//\"server\": \"json-server -p3001 --watch db.json\"\n//npm run server\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([])  \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ search, setSearch ] = useState('')\n  const [ notification, setNotification] = useState(null)\n  const [ errorMessage, setErrorMessage] = useState(null)\n\n  const hook = () => {\n    phonebookServices\n      .getAll()\n      .then(initPhonebook => {\n        setPersons(initPhonebook)\n      })\n  }\n\n  useEffect(hook,[])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log('adding person', newName);\n    const newPerson = {\n      name: newName,\n      number: newNumber\n      \n    }\n    if (persons.some(person => person.name === newName)) {\n      const confirmation = window.confirm(`${newPerson.name} is already added to the phonebook, replace the old number with a new one?`)\n      if (confirmation) {\n        const idToUpdate = persons.find(person => person.name === newPerson.name).id\n        setNotification(`updated ${newName} with new number ${newNumber}`)\n        setTimeout(() => {\n          setNotification(null)\n        },5000)\n        \n        phonebookServices\n          .update(idToUpdate,newPerson)\n          .then(returnedPerson=> {\n            setPersons(persons.map(person => person.id !== idToUpdate ? person : returnedPerson))\n          })\n          .catch(error => {\n            setNotification(null)\n            setErrorMessage(`person ${newPerson.name} was already deleted.`)\n            setTimeout(() => {  \n              setErrorMessage(null)\n            },5000)\n          })\n        \n      }\n    }\n    else {\n      phonebookServices\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          console.log('done setting persons');\n        })\n      setNewName('')\n      setNewNumber('')\n    }\n\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearch(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification}/>\n      <Error message={errorMessage}/>\n      <Filter handleSearchChange={handleSearchChange}/>\n      <h2>Add new</h2>\n      <AddPerson addPerson={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}/>\n      <h2>Numbers</h2>\n      <Numbers persons={persons} search={search} setPersons={setPersons}/>\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\n\n\n\nReactDOM.render(\n  <App  />,\n  document.getElementById('root')\n)"],"sourceRoot":""}